apply plugin: 'com.android.application'

// 默认版本号
ext.appVersionCode = 1
// 默认版本名
ext.appVersionName = "1.0.0.0"
// 默认apk输出路径
ext.appReleaseDir = "E:\\apk\\apk_"

// 加载版本信息配置文件方法
def loadProperties() {
    def proFile = file("../local.properties")
    Properties pro = new Properties()
    proFile.withInputStream { stream ->
        pro.load(stream)
    }
    appReleaseDir = pro.appReleaseDir
    appVersionCode = Integer.valueOf(pro.appVersionCode)
    appVersionName = pro.appVersionName
}
//加载版本信息
loadProperties()

android {
    signingConfigs {
        release {
            keyAlias 'fmb'
            keyPassword 'fmbox123'
            storeFile file('../fmb.jks')
            storePassword 'fmbox123'
        }
    }
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    useLibrary 'org.apache.http.legacy'
    defaultConfig {
        applicationId "com.thindo.fmb"
        minSdkVersion 17
        targetSdkVersion 22
        versionCode appVersionCode
        versionName appVersionName
        multiDexEnabled true
        // 默认打包渠道
        manifestPlaceholders = [UMENG_CHANNEL_VALUE: "fmb"]
    }

    buildTypes {
        release {
            // 正式版不显示log
            buildConfigField "boolean", "LOG_DEBUG", "false"
            // 进行混淆
            minifyEnabled false
            // 进行压缩优化
            zipAlignEnabled true
            // 进行资源优化，移除无用的resource文件
            shrinkResources true
            // 使用的签名信息
            signingConfig signingConfigs.release
            // 使用的混淆规则文件，前面是系统默认的文件，会全部混淆，
            // 后面是自定义不混淆的文件（domain，android四大组件，自定义view等一般是不能混淆的）
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            //正式版本标识
            manifestPlaceholders = [APP_PUBLISH_RELEASE_VALUE: "true",APP_PUBLISH_HTTP_VALUE: "http://fmb.fmsecret.cn/newfmb-app-server/rest"]
            //应用编译完成，自定义apk输出位置及文件名

//            android.applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def file = output.outputFile
//                    //开始输出,自定义输出路径
//                    output.outputFile = new File(appReleaseDir + getDate() + "_v" +
//                            appVersionName + "_" + variant.productFlavors[0].name + "_release.apk")
//                }
//            }
        }
        debug {
            // 显示Log
            buildConfigField "boolean", "LOG_DEBUG", "true"
            // apk包名称后缀，用来区分release和debug
            versionNameSuffix "_debug"
            // 不混淆
            minifyEnabled false
            // 不压缩优化
            zipAlignEnabled false
            // 不进行资源优化（删除无用资源等）
            shrinkResources false
            // 使用的签名信息
            signingConfig signingConfigs.release
            //测试版本标识
            manifestPlaceholders = [APP_PUBLISH_RELEASE_VALUE: "false",APP_PUBLISH_HTTP_VALUE: "https://wx.fmsecret.cn/newfmb-app-server/rest"]
//          运行编译需注释此段代码，测试打包可开启
//            //应用编译完成，自定义apk输出位置及文件名
//              android.applicationVariants.all { variant ->
//                variant.outputs.each { output ->
//                    def file = output.outputFile
//                    //开始输出,自定义输出路径
//                    output.outputFile = new File(appReleaseDir + getDate() + "_v" +
//                            appVersionName + "_" + variant.productFlavors[0].name + "_debug.apk")
//                }
//            }
        }
    }

    // 禁止Lint出错导致打包异常终止
    lintOptions {
        disable 'MissingTranslation', 'ExtraTranslation'
        abortOnError false
        ignoreWarnings true
    }

    productFlavors {
        fmb {}
    }
    dexOptions {
        preDexLibraries = false
        javaMaxHeapSize "4g"
    }

    // 打包排除以下文件，屏蔽因as自身bug，在没有重复引用jar时，提示jar重复引用的问题
    packagingOptions {
        exclude 'META-INF/DEPENDENCIES.txt'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/notice.txt'
        exclude 'META-INF/license.txt'
        exclude 'META-INF/dependencies.txt'
        exclude 'META-INF/LGPL2.1'
        exclude 'META-INF/ASL2.0'
    }

    productFlavors.all {
        flavor -> flavor.manifestPlaceholders = [UMENG_CHANNEL_VALUE: name]
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

}

repositories {
    flatDir {
        dirs 'libs'
    }
    maven { url "https://jitpack.io" }
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy_MM_dd_HHmm')
    return formattedDate
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile 'junit:junit:4.12'
    compile 'de.greenrobot:eventbus:2.4.0'
    compile 'com.github.orhanobut:hawk:1.20'
    compile 'de.hdodenhof:circleimageview:1.3.0'
    compile 'cn.pedant.sweetalert:library:1.3'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile 'com.google.code.gson:gson:2.2.4'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.nostra13.universalimageloader:universal-image-loader:1.9.5'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.android.support:appcompat-v7:23.0.0'
    compile 'com.android.support:support-v4:23.0.0'
    compile 'com.android.support:design:23.2.0'
    compile 'com.facebook.rebound:rebound:0.3.8'
    compile(name: 'FMBaseLibrary', ext: 'aar')
    compile files('libs/zmxySDKALCmini_V1.01450366738902_release.jar')
    compile files('libs/locSDK_6.13.jar')
    compile 'de.greenrobot:eventbus:3.0.0-beta1'
    compile files('libs/Amap_2DMap_V4.2.0_20170120.jar')
    compile files('libs/AMap_Location_V3.3.0_20170118.jar')
    compile files('libs/AMap_Search_V4.0.0_20170111.jar')
    compile files('libs/zxing.jar')
}
